import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import os
import matplotlib.image as mpimg
import matplotlib.gridspec as gridspec
import matplotlib.pylab as pl


path_bmp = '/Users/fathimakhazana/Documents/PedestrianAnomalyDetection/ucsd_data/UCSDped2/ground_truth/Test006_gt'
path_tif = '/Users/fathimakhazana/Documents/PedestrianAnomalyDetection/ucsd_data/UCSDped2/Test/Test006'

images_bmp = os.listdir(path_bmp)
images_bmp.sort()

images_tif = os.listdir(path_tif) 
images_tif.sort()

for i in range(1, 180,20):
    images_bmp.remove('frame' + '{0:03}'.format(i) + '.bmp')
    images_tif.remove('{0:03}'.format(i) + '.tif')


y = np.array([0.0002988535852637142, 
        0.00021216068125795573, 
        0.00021405999723356217, 
        0.00021150657266844064, 
        0.00020599276467692107, 
        0.00020590712665580213, 
        0.0002000081876758486, 
        0.00020669314835686237, 
        0.00020247665815986693, 
        0.00018945771444123238, 
        0.00019109170534648, 
        0.00020450032025109977, 
        0.00020171159121673554, 
        0.00021243261289782822, 
        0.0002336520265089348, 
        0.00023491463798563927, 
        0.00024458023835904896, 
        0.00024761250824667513, 
        0.0002326702669961378, 
        0.00031548779224976897, 
        0.0002139505959348753, 
        0.00020938031957484782, 
        0.00021947905770502985, 
        0.0002181292074965313, 
        0.00021083692263346165, 
        0.00021208557882346213, 
        0.0002382812526775524, 
        0.00022482755593955517, 
        0.00023228293866850436, 
        0.00023846278782002628, 
        0.00026777380844578147, 
        0.00026385317323729396, 
        0.00023892037279438227, 
        0.0002405596460448578, 
        0.0002321514766663313, 
        0.00023571793281007558, 
        0.00024251015565823764, 
        0.00023644922475796193, 
        0.0003957623557653278, 
        0.00029441906372085214, 
        0.00028479789034463465, 
        0.00027491370565257967, 
        0.00029297469882294536, 
        0.00030336526106111705, 
        0.00033340632217004895, 
        0.0003676239284686744, 
        0.00036385623388923705, 
        0.00035244671744294465, 
        0.0003493285912554711, 
        0.0003464737383183092, 
        0.0003546981606632471, 
        0.0003457123530097306, 
        0.0003595791640691459, 
        0.0003517473232932389, 
        0.000341511273290962, 
        0.00036476223613135517, 
        0.00038004814996384084, 
        0.000603606749791652, 
        0.0004460657946765423, 
        0.00039878394454717636, 
        0.00035580917028710246, 
        0.000344499247148633, 
        0.0003458292339928448, 
        0.00034792767837643623, 
        0.00035920480149798095, 
        0.0003653308958746493, 
        0.000377569260308519, 
        0.000346343353157863, 
        0.00035992267658002675, 
        0.0003619349154178053, 
        0.0003704871342051774, 
        0.00035954994382336736, 
        0.0003808103210758418, 
        0.00038116719224490225, 
        0.0003890513035003096, 
        0.0003573898284230381, 
        0.0006122810882516205, 
        0.00039006085717119277, 
        0.00036141567397862673, 
        0.0003676965134218335, 
        0.00034554587909951806, 
        0.00034893714473582804, 
        0.0003303791454527527, 
        0.00034559229970909655, 
        0.00034482378396205604, 
        0.0003564665967132896, 
        0.00034024816704913974, 
        0.0003495584533084184, 
        0.00033449503825977445, 
        0.00032345904037356377, 
        0.0003232552553527057, 
        0.00032953923800960183, 
        0.00031592792947776616, 
        0.0003100668254774064, 
        0.0003140664775855839, 
        0.0005611792439594865, 
        0.0003805740852840245, 
        0.00035719593870453537, 
        0.0003523451159708202, 
        0.00033442367566749454, 
        0.00034862433676607907, 
        0.00034876211429946125, 
        0.0003474824479781091, 
        0.0003620529896579683, 
        0.0003794900549110025, 
        0.0003478356229607016, 
        0.00034932332346215844, 
        0.0003420565917622298, 
        0.0003475013072602451, 
        0.0003533512935973704, 
        0.0003762576379813254, 
        0.00038511233287863433, 
        0.000363441911758855, 
        0.0003486197383608669, 
        0.0006020113942213356, 
        0.0004218655521981418, 
        0.0003577212046366185, 
        0.00037495477590709925, 
        0.00036187312798574567, 
        0.00035214790841564536, 
        0.0003407961339689791, 
        0.00035500971716828644, 
        0.0003737800579983741, 
        0.0003682186361402273, 
        0.0003640740760602057, 
        0.0003805416345130652, 
        0.0003623990050982684, 
        0.0003725885762833059, 
        0.0003585967351682484, 
        0.00038431264692917466, 
        0.0003839152632281184, 
        0.000374008493963629, 
        0.00036347933928482234, 
        0.0006071370444260538, 
        0.0003995805454906076, 
        0.0003408586489968002, 
        0.0003393965889699757, 
        0.00031969230622053146, 
        0.0003092635306529701, 
        0.00029555882792919874, 
        0.00027066696202382445, 
        0.0002738880575634539, 
        0.00028041013865731657, 
        0.00027905823662877083, 
        0.00027832319028675556, 
        0.0002927794703282416, 
        0.0002640296588651836, 
        0.00025592936435714364, 
        0.0002759049239102751, 
        0.00027048931224271655, 
        0.00025796363479457796, 
        0.000266709306742996, 
        0.00040083465864881873, 
        0.00029181307763792574, 
        0.0002648870868142694, 
        0.0002568330673966557, 
        0.0002578337152954191, 
        0.0002552347141318023, 
        0.0002642099861986935, 
        0.00027660842170007527, 
        0.000278497114777565, 
        0.0002543426235206425, 
        0.00024392206978518516, 
        0.00025157976779155433, 
        0.0002554354432504624, 
        0.0002570491633377969, 
        0.00027343808324076235, 
        0.00027457543183118105, 
        0.00028449445380829275, 
        0.00028693012427538633, 
        0.00024678403860889375])


gs = gridspec.GridSpec(2, 2)
pl.figure()



x = np.linspace(1, 171, 171)

fig, ax = pl.subplots(nrows=2, ncols=1)

ax1 = pl.subplot(gs[0, 0]) 
ax1.set_xticks([])
ax1.set_yticks([])
pl.gca().set_title('Test Video') 

ax2 = pl.subplot(gs[0, 1]) 
ax2.set_xticks([])
ax2.set_yticks([])
pl.gca().set_title('Ground Truth') 

ax3 = pl.subplot(gs[1, :]) 
pl.gca().set_title('Error plot') 
pl.gca().set_ylabel('MSE')
pl.gca().set_xlabel('Frames')


line, = ax3.plot(x, y, color='k')


def update(num, x, y, line):
    line.set_data(x[:num], y[:num])
    line.axes.axis([0, 171, min(y), max(y) + 0.0001])
    ax2.imshow(mpimg.imread(os.path.join(path_bmp,images_bmp[num])), animated=True)
    ax1.imshow(mpimg.imread(os.path.join(path_tif,images_tif[num])), animated=True ,cmap = 'gray')
    return line

ani = animation.FuncAnimation(fig, update, len(x), fargs=[x, y, line],
                              interval=90, blit=False)
ani.save('error_Ped2.mp4', writer='ffmpeg', codec='h264')
plt.show()

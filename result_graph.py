import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import os
import matplotlib.image as mpimg
import matplotlib.gridspec as gridspec
import matplotlib.pylab as pl



path_bmp = '/Users/fathimakhazana/Documents/PedestrianAnomalyDetection/ucsd_data/UCSDped1/ground_truth/Test014_gt'
path_tif = '/Users/fathimakhazana/Documents/PedestrianAnomalyDetection/ucsd_data/UCSDped1/Test/Test014'


    

images_bmp = os.listdir(path_bmp)
images_bmp.sort()

images_tif = os.listdir(path_tif) 
images_tif.sort()

for i in range(1, 200,10):
    images_bmp.remove('{0:03}'.format(i) + '.bmp')
    images_tif.remove('{0:03}'.format(i) + '.tif')


y = np.array([0.0020551239140331745, 
        0.001647173659875989, 
        0.0013063413789495826, 
        0.001483912579715252, 
        0.0016519889468327165, 
        0.0017018448561429977, 
        0.0016470637638121843, 
        0.001614379114471376, 
        0.0016528109554201365, 
        0.002127127256244421, 
        0.0017644509207457304, 
        0.0015979818999767303, 
        0.0015713510802015662, 
        0.0013938368065282702, 
        0.0011842296225950122, 
        0.0012336678337305784, 
        0.0013051297282800078, 
        0.001257204683497548, 
        0.001465923385694623, 
        0.001166180009022355, 
        0.0011687607038766146, 
        0.0010908717522397637, 
        0.0010525083635002375, 
        0.0010432929266244173, 
        0.0011134905507788062, 
        0.0011034563649445772, 
        0.0009874668903648853, 
        0.001413322752341628, 
        0.0012416418176144361, 
        0.0012825023150071502, 
        0.0011584724998101592, 
        0.001104669296182692, 
        0.0012466583866626024, 
        0.0013816587161272764, 
        0.0012664970709010959, 
        0.0012113989796489477, 
        0.0018399537075310946, 
        0.0014905771240592003, 
        0.0014565095771104097, 
        0.0012607431272044778, 
        0.001354106469079852, 
        0.001432276563718915, 
        0.001370533020235598, 
        0.0012640662025660276, 
        0.0011250432580709457, 
        0.0011773379519581795, 
        0.0008756136521697044, 
        0.0008914213394746184, 
        0.0009092045947909355, 
        0.0008809235878288746, 
        0.0009587326203472912, 
        0.0009115097927860916, 
        0.0008852318860590458, 
        0.000893189397174865, 
        0.001099561108276248, 
        0.0007960592629387975, 
        0.0009113792330026627, 
        0.0008223835611715913, 
        0.0008239358430728316, 
        0.000801893591415137, 
        0.0008081790874712169, 
        0.0008515564841218293, 
        0.0009008811903186142, 
        0.0010490926215425134, 
        0.0008695736760273576, 
        0.0008216093992814422, 
        0.0008760940399952233, 
        0.0008911760523915291, 
        0.0008867426076903939, 
        0.0009187658433802426, 
        0.0009300269302912056, 
        0.0009598477627150714, 
        0.0011579052079468966, 
        0.0009188515832647681, 
        0.0008850617450661957, 
        0.0009770503966137767, 
        0.0010133214527741075, 
        0.0010092227021232247, 
        0.000993800349533558, 
        0.0010118803475052118, 
        0.0010855795117095113, 
        0.0013811970129609108, 
        0.0009947989601641893, 
        0.0009839392732828856, 
        0.0010206010192632675, 
        0.000989576568827033, 
        0.0009661770309321582, 
        0.0009292564354836941, 
        0.0008581361616961658, 
        0.0009347593295387924, 
        0.0010961450170725584, 
        0.0008749411208555102, 
        0.000871497206389904, 
        0.0008991910144686699, 
        0.0008523189462721348, 
        0.0008629463845863938, 
        0.0007859707693569362, 
        0.0008126999018713832, 
        0.0008082441054284573, 
        0.0010078722843900323, 
        0.0008091935887932777, 
        0.0007844177889637649, 
        0.0007875338196754456, 
        0.0008092001080513, 
        0.0008098328253254294, 
        0.000816536252386868, 
        0.000795912928879261, 
        0.0008795062894932926, 
        0.0013324525207281113, 
        0.001574046560563147, 
        0.0019877776503562927, 
        0.0020985244773328304, 
        0.00227194931358099, 
        0.0023148413747549057, 
        0.002339764265343547, 
        0.0022724629379808903, 
        0.002078788820654154, 
        0.0028063212521374226, 
        0.0023729109670966864, 
        0.00201789615675807, 
        0.0018261201912537217, 
        0.0017608344787731767, 
        0.001731917611323297, 
        0.0018196247983723879, 
        0.0016296806279569864, 
        0.0016727037727832794, 
        0.0023296133149415255, 
        0.001740716747008264, 
        0.0015179668553173542, 
        0.0014092634664848447, 
        0.0013302365550771356, 
        0.0012196563184261322, 
        0.0012522967299446464, 
        0.0013286871835589409, 
        0.0012497873976826668, 
        0.0019706955645233393, 
        0.0013266652822494507, 
        0.0012455908581614494, 
        0.0012191783171147108, 
        0.0010973461903631687, 
        0.0010418904712423682, 
        0.0010063037043437362, 
        0.0010744197061285377, 
        0.0011026524007320404, 
        0.0014758442994207144, 
        0.001125246868468821, 
        0.0011581365251913667, 
        0.001096302643418312, 
        0.001031910302117467, 
        0.0009551054681651294, 
        0.0008955136872828007, 
        0.000980575568974018, 
        0.0010467543033882976, 
        0.0014390225987881422, 
        0.0010528548154979944, 
        0.0010244396980851889, 
        0.0011429352452978492, 
        0.0010074556339532137, 
        0.001013109809719026, 
        0.0009716722997836769, 
        0.001025480916723609, 
        0.001018809387460351, 
        0.0012510759988799691, 
        0.0011066427687183022, 
        0.000978010706603527, 
        0.001013672212138772, 
        0.0010663742432370782, 
        0.0009672043961472809, 
        0.0008134435629472136, 
        0.0007616943912580609, 
        0.0008182512829080224, 
        0.0011315310839563608, 
        0.0008439241209998727, 
        0.0007741375011391938, 
        0.000704670324921608, 
        0.0008069470641203225, 
        0.0008656401187181473, 
        0.0008126930333673954, 
        0.0007395370048470795, 
        0.0007329354993999004])


gs = gridspec.GridSpec(2, 2)
pl.figure()



x = np.linspace(1, 180, 180)

fig, ax = plt.subplots(nrows=2, ncols=1)

ax1 = pl.subplot(gs[0, 0]) 
ax2 = pl.subplot(gs[0, 1]) 
ax3 = pl.subplot(gs[1, :]) 

line, = ax3.plot(x, y, color='k')

ax1.set_xticks([])
ax1.set_yticks([])

ax2.set_xticks([])
ax2.set_yticks([])


def update(num, x, y, line):
    line.set_data(x[:num], y[:num])
    line.axes.axis([0, 180, min(y), max(y) + 0.001])
    ax2.imshow(mpimg.imread(os.path.join(path_bmp,images_bmp[num])), animated=True)
    ax1.imshow(mpimg.imread(os.path.join(path_tif,images_tif[num])), animated=True)
    return line

ani = animation.FuncAnimation(fig, update, len(x), fargs=[x, y, line],
                              interval=90, blit=False)
ani.save('error_3.mp4', writer='ffmpeg', codec='h264')
plt.show()
